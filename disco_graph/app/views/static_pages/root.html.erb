<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>DiscoGraph</title>
    <!-- <script type="text/javascript" src="https://code.jquery.com/jquery-2.2.0.min.js"></script> -->
    <!-- <script type="text/javascript" src="../../frontend/bundle.js"></script> -->
    <script src="https://d3js.org/d3.v4.min.js"></script>

    <script type="text/javascript">
      $(document).ready(() => {

        const genreColors = {
          "rock": "#8ce196",
          "pop": "steelblue",
          "hip-hop": "purple",
          "funk-soul": "orange",
          "electronic": "green",
          "classical": "brown",
          "jazz": "red"
        }

        const genreQuery = (data) => {
          return $.ajax({
            method: "GET",
            url: "api/genreQuery",
            data: data
          });
        };

        const getMaxRelease = (genres, storage) => {
          topReleasesPerGenre = []
          genres.forEach( (genre) => {
          topReleasesPerGenre.push(d3.max(Object.values(storage[genre])));
          })
          return d3.max(topReleasesPerGenre);
        }

        const writeGraph = (localData, minYear, maxYear) => {
          const genres = Object.keys(localData);
          let globalData = {};
          genres.forEach( (genre) => {
            globalData[genre] = JSON.parse(localData[genre]);
          });

          const margin = {top: 30, right: 20, bottom: 30, left: 50};
          const w = 950 - margin.left - margin.right;
          const h = 500 - margin.top - margin.bottom;

          const xScale = d3.scaleTime()
                        .rangeRound([0, w - margin.left - margin.right]);

          const yScale = d3.scaleLinear()
                        .rangeRound([h - margin.bottom - margin.top, 0]);

          const line = d3.line()
                .x(function(d) { return xScale(d[0]) })
                .y(function(d) { return yScale(d[1]) })

          const parseDate = d3.timeParse("%Y");

          const maxNumOfReleases = getMaxRelease(genres, globalData);

          const formatData = (genre) => {
            const keys = Object.keys(genre).sort();
            const data = keys.map( (key) => {
              return [parseDate(key), genre[key]] }
            )
            return data;
          }

          // debugger
          // let datasets = [];
          // genres.forEach( (genre) => {
          //   datasets.push(JSON.parse(localStorage[genre]))
          // })

          xScale.domain([parseDate(minYear), parseDate(maxYear)]);
          yScale.domain([0, maxNumOfReleases]);

          const GenerateLeftAxis = (scale) => {
            const leftAxis = d3.axisLeft(scale);
            return leftAxis;
          };

          const GenerateBottomAxis = (scale) => {
          const bottomAxis = d3.axisBottom(scale)
          return bottomAxis;
          };

          const leftAxis = GenerateLeftAxis(yScale);
          const bottomAxis = GenerateBottomAxis(xScale);

          let svg = d3.select('#d3Graph').append("svg")
                .attr("width", w + margin.left + margin.right)
                .attr("height", h + margin.top + margin.bottom);

              svg.append("g")
                .attr("class", "axis")
                .attr("transform", `translate(${margin.left}, ${margin.bottom})`)
                .call(leftAxis);

              svg.append("g")
              .attr("class", "axis")
                .attr("transform", `translate(${margin.left}, ${h - margin.bottom})`)
                .call(bottomAxis);

            genres.forEach( (genre) => {
              debugger
              dataset = JSON.parse(localStorage[genre])
              formattedDataset = formatData(dataset)
              svg.append("path")
                .attr("d", line(formattedDataset))
                .attr("stroke", genreColors[genre])
                .attr("stroke-width", 2)
                .attr("fill", "none")
                .attr("transform", `translate(${margin.left}, ${margin.bottom})`);
            });
        }

        const genreButtonClick = function (genre, clicked, startYear, endYear) {
          if  (clicked === false) {
            // WRITE CODE TO REMOVE LINE FROM GRAPH
          } else if (startYear === "" || endYear === "") {
            alert("You must provide start and end years")
          } else {
              // let data = {'genre': genre, 'startYear': startYear, 'endYear': endYear}
              // genreQuery(data).then(
              //   (response) => {
              //     localStorage.setItem(genre, JSON.stringify(response[genre]))
              //   },
              //   (error) => console.log(error)
              // );
              writeGraph(localStorage, startYear, endYear);
            }
          }

        const rockButton = document.getElementById("rock-toggle");
        const popButton = document.getElementById("pop-toggle");
        const hipHopButton = document.getElementById("hip-hop-toggle");
        const funkSoulButton = document.getElementById("funk-soul-toggle");
        const electronicButton = document.getElementById("electronic-toggle");
        const classicalButton = document.getElementById("classical-toggle");
        const jazzButton = document.getElementById("jazz-toggle");

        rockButton.addEventListener("click", () => genreButtonClick("rock", rockButton.clicked, $('#startYear').val(), $('#endYear').val()), false)
        popButton.addEventListener("click", () => genreButtonClick("pop", popButton.clicked, $('#startYear').val(), $('#endYear').val()), false)
        hipHopButton.addEventListener("click", () => genreButtonClick("hip-hop", hipHopButton.clicked, $('#startYear').val(), $('#endYear').val()), false)
        funkSoulButton.addEventListener("click", () => genreButtonClick("funk/soul", funkSoulButton.clicked, $('#startYear').val(), $('#endYear').val()), false)
        electronicButton.addEventListener("click", () => genreButtonClick("electronic", electronicButton.clicked, $('#startYear').val(), $('#endYear').val()), false)
        classicalButton.addEventListener("click", () => genreButtonClick("classical", classicalButton.clicked, $('#startYear').val(), $('#endYear').val()), false)
        jazzButton.addEventListener("click", () => genreButtonClick("jazz", jazzButton.clicked, $('#startYear').val(), $('#endYear').val()), false)







        $("#mainForm").submit( (e) => {
          e.preventDefault();

      });
      });
    </script>
  </head>


  <body>
    <header><h1 class="logo">DiscoGraphs</h1></header>
    <main>
      <form id="mainForm">
        <label for="year">Start Year
          <input type="text" name="startYear" value="" id="startYear">
        </label>

        <label for="year">End Year
          <input type="text" name="endYear" value="" id="endYear">
        </label>

        <div id="d3Graph"></div>

        <section class="genre-buttons group">
          <div class="switch">
            <input type="checkbox" class="check-to-toggle" id="rock-toggle">
            <label for="rock-toggle"></label>
          </div>

          <div class="switch">
            <input type="checkbox" class="check-to-toggle" id="pop-toggle">
            <label for="pop-toggle"></label>
          </div>

          <div class="switch">
            <input type="checkbox" class="check-to-toggle" id="hip-hop-toggle">
            <label for="hip-hop-toggle"></label>
          </div>

          <div class="switch">
            <input type="checkbox" class="check-to-toggle" id="funk-soul-toggle">
            <label for="funk-soul-toggle"></label>
          </div>

          <div class="switch">
            <input type="checkbox" class="check-to-toggle" id="electronic-toggle">
            <label for="electronic-toggle"></label>
          </div>

          <div class="switch">
            <input type="checkbox" class="check-to-toggle" id="classical-toggle">
            <label for="classical-toggle"></label>
          </div>

          <div class="switch">
            <input type="checkbox" class="check-to-toggle" id="jazz-toggle">
            <label for="jazz-toggle"></label>
          </div>
        </section>




        <label for="genre">Genre
          <input type="text" name="genre" value="" id="genre">
        </label>
        <button>submit!</button>
      </form>

    </main>


  </body>
</html>
